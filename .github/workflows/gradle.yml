# 프로젝트의 CI/CD를 위한 설정 파일

# 이름을 지정 (원하는 이름으로 지정해도 무관합니다.)
name: Plug project CICD 

# main 브랜치에 Git 푸시 또는 풀 리퀘스트가 발생했을 때 실행되도록 설정합니다.
# 다른 브랜치에서 CI/CD를 실행하고 싶다면 branches 항목을 수정하면 됩니다
#  ex) branches: [ "브랜치 이름" ] 부분을 수정해주면 된다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 권한 설정으로, 내용물을 읽을 수 있는 권한을 부여합니다.
permissions:
  contents: read

# 수행할 작업들을 선언합니다.
jobs:
  build:
    
    # 우분투 최신버전에서 작업을 실행
    runs-on: ubuntu-latest

   # steps 하위로 선언한 순서대로 작업을 수행합니다.
    steps:
   
    	 # 코드 체크아웃은 저장소에서 소스코드를 가져와서 현재 작업 디렉토리에 복사하는 작업입니다.
    	 # 최신 소스 코드를 가져와서 빌드, 테스트, 배포 등의 작업을 진행할 수 있습니다.
      - name: 코드 체크아웃
        uses: actions/checkout@v3
        
  	# 작업한 스프링 프로젝트의 자바 버전을 설정합니다.
      - name: JDK 17 설정
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # Gradle 스크립트 실행 전 실행 권한을 부여합니다.
      - name: gradlew 권한 부여
        run: chmod +x ./gradlew
        shell: bash        
  
  	# 스프링 프로젝트의 빌드도구인 gradle을 통해 빌드하는 설정입니다.
      - name: Gradle로 빌드
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
        with:
          arguments: build
